// Code generated by entc, DO NOT EDIT.

package dept

import (
	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the dept type in the database.
	Label = "dept"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "dept_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"
	// EdgeUserPropertiesInDept holds the string denoting the user_properties_in_dept edge name in mutations.
	EdgeUserPropertiesInDept = "user_properties_in_dept"
	// UserFieldID holds the string denoting the ID field of the User.
	UserFieldID = "user_id"
	// UserPropertyInDeptFieldID holds the string denoting the ID field of the UserPropertyInDept.
	UserPropertyInDeptFieldID = "id"
	// Table holds the table name of the dept in the database.
	Table = "depts"
	// UsersTable is the table the holds the users relation/edge. The primary key declared below.
	UsersTable = "dept_users"
	// UsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UsersInverseTable = "users"
	// UserPropertiesInDeptTable is the table the holds the user_properties_in_dept relation/edge.
	UserPropertiesInDeptTable = "user_property_in_depts"
	// UserPropertiesInDeptInverseTable is the table name for the UserPropertyInDept entity.
	// It exists in this package in order to avoid circular dependency with the "userpropertyindept" package.
	UserPropertiesInDeptInverseTable = "user_property_in_depts"
	// UserPropertiesInDeptColumn is the table column denoting the user_properties_in_dept relation/edge.
	UserPropertiesInDeptColumn = "dept_id"
)

// Columns holds all SQL columns for dept fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// UsersPrimaryKey and UsersColumn2 are the table columns denoting the
	// primary key for the users relation (M2M).
	UsersPrimaryKey = []string{"dept_id", "user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/Peanuttown/dd_contacts/ent/runtime"
//
var (
	Hooks [1]ent.Hook
)
